<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
	    http://www.springframework.org/schema/context
	    http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

    <!--action层-->
    <!--整合，同时要将scope视为多例-->
    <bean name="loginAction" class="action_xgl.LoginAction" scope="prototype">
        <property name="adminService" ref="adminServiceImp"/>
    </bean>
    <!--新闻类型模块-->
    <bean name="categoryAction" class="action_xgl.CategoryAction" scope="prototype">
        <property name="adminService" ref="adminServiceImp"/>
    </bean>
    <!--新闻内容模块-->
    <bean name="news" class="action_xgl.NewsAction" scope="prototype">
        <property name="adminService" ref="adminServiceImp"/>
    </bean>


    <!--serivice层-->
    <!--编译用接口，运行用实现类。在ServiceImp中注入Dao的实现类，方便业务层调用Dao的方法，需要提供@Data注解-->
    <bean name="adminServiceImp" class="serviceImp_xgl.AdminServiceImp">
        <property name="categoryDao" ref="categoryDaoImp"/>
        <property name="newsDao" ref="newsDaoImp"/>
        <property name="loginDao" ref="loginDaoImp"/>
    </bean>

    <!--dao层-->
    <bean name="loginDaoImp" class="daoImp_xgl.LoginDaoImp">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <bean name="categoryDaoImp" class="daoImp_xgl.CategoryDaoImp">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <bean name="newsDaoImp" class="daoImp_xgl.NewsDaoImp">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>


    <!--访问根目录里的jdbc.properties并将其封装成bean-->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:jdbc.properties"/>
    </bean>
    <!-- 数据源的配置，使用C3P0连接池，用户名和密码需要根据实际情况配置 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${mysql.driverClassName}"></property>
        <property name="jdbcUrl" value="${mysql.url}"></property>
        <property name="user" value="${mysql.username}"></property>
        <property name="password" value="${mysql.password}"></property>

        <!-- 设置数据库连接池的最大连接数 -->
        <property name="maxPoolSize">
            <value>50</value>
        </property>
        <!-- 设置数据库连接池的最小连接数 -->
        <property name="minPoolSize">
            <value>5</value>
        </property>
        <!-- 设置数据库连接池的初始化连接数 -->
        <property name="initialPoolSize">
            <value>5</value>
        </property>
        <!-- 设置数据库连接池的连接最大空闲时间 -->
        <property name="maxIdleTime">
            <value>20</value>
        </property>
        <!-- c3p0缓存Statement的数量数 -->
        <property name="maxStatements">
            <value>50</value>
        </property>
        <!-- 当连接池里面的连接用完的时候,C3P0一下获取新的连接数 -->
        <property name="acquireIncrement">
            <value>20</value>
        </property>
    </bean>

    <!-- hibernate 管理-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <!-- 引用上面设置的数据源 -->
        <property name="dataSource">
            <ref bean="dataSource"/>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
                <prop key="hibernate.autoReconnect">true</prop>
                <prop key="hibernate.connection.autocommit">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <!-- 解决session关闭问题 -->
                <prop key="hibernate.enable_lazy_load_no_trans">true</prop>
                <prop key="hibernate.max_fetch_depth">3</prop>
                <prop key="hibernate.connection.url">${mysql.url}</prop>
                <prop key="hibernate.connection.driver_class">${mysql.driverClassName}</prop>
            </props>
        </property>
        <!-- hibernate映射文件的引入 -->
        <property name="mappingResources">
            <list>
                <value>bean_xgl/User.hbm.xml</value>
                <value>bean_xgl/Category.hbm.xml</value>
                <value>bean_xgl/News.hbm.xml</value>
                <value>bean_xgl/User.hbm.xml</value>
            </list>
        </property>
    </bean>
    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <!-- 配置hibernateTemplate -->
    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

<!--&lt;!&ndash;    开启组件扫描&ndash;&gt;-->
<!--    <context:component-scan base-package="action_*"></context:component-scan>-->
<!--    <mvc:annotation-driven/>-->
</beans>